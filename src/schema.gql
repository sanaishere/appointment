# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: ID
  roles: [String!]!
  firstname: String!
  lastname: String!
  password: String!
  email: String!
  caseNumber: Float
  illness: String
}

type Appointment {
  startTime: Float!
  lastUpdate: DateTime!
  lastUpdater: User
  date: String!
  text: String
  patient: User!
  staff: User!
  status: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LeaveRequest {
  _id: ID
  hours: [Float!]!
  wantedDate: String!
  createdDate: DateTime!
  text: String
  staff: User!
  status: String!
}

type StaffFreeHours {
  staffId: String!
  emptyHours: [Int!]!
}

type StaffHoursRes {
  staffHours: [StaffFreeHours!]!
  date: String!
}

type SalaryRate {
  _id: ID
  year: Float!
  incomePerPatient: Float!
}

type Salary {
  _id: ID
  month: Float!
  year: Float!
  income: Float!
  staff: User!
  isPayed: Boolean!
}

type Query {
  getStaffs: [User!]!
  getStaff(id: String!): User!
  busyStaffs(input: GetStaffInput!): [User!]!
  freeStaffs(input: GetStaffInput!): [User!]!
  staffsOnLeave(input: GetStaffInput!): [User!]!
  findAllUsers: String!
  getDaily(staffId: String!, date: String!): [Appointment!]!
  freeTimes(staffName: String!, date: String!): StaffHoursRes!
  getByUser: [Appointment!]!
  myRequests: LeaveRequest!
  getUserRequests(id: String!): LeaveRequest!
  getAllRequests: [LeaveRequest!]!
  getPendingRequests: [LeaveRequest!]!
  me: User!
  getPatients: User!
  getPerYear(year: Float!): SalaryRate!
  getsalaries(getSalaryInput: SalaryInput!): Salary!
  getSalaryOfUser(getSalaryInput: SalaryInput!): Salary!
}

input GetStaffInput {
  date: String!
  hours: Float!
}

input SalaryInput {
  month: String!
  year: Float!
  staffId: String!
}

type Mutation {
  createStaff(staffInput: StaffInput!): User!
  editStaff(staffInput: StaffUpdateInput!, id: String!): User!
  deletStaff(id: String!): User!
  login(login: LoginInput!): User!
  patientSignUp(signup: SignUpInput!): User!
  patientUpdate(update: UpdateInput!): User!
  requestAppointment(input: AppointmentInput!): Appointment!
  updateAppointment(id: String!, input: UpdateAppointmentStatus!): Appointment!
  deleteAppointment(id: String!): Appointment!
  requestLeave(reqInput: RequestInput!): LeaveRequest!
  updateRequest(reqInput: RequestInput!, id: String!): LeaveRequest!
  deleteRequest(id: String!): LeaveRequest!
  updateStatus(status: UpdateLeaveStatus!, id: String!): LeaveRequest!
  create(salaryRateInput: SalaryRateInput!): SalaryRate!
  edit(salaryRateUpdate: SalaryRateUpdate!, id: Float!): SalaryRate!
  evaluate(salaryInput: EvaluateInput!): Salary!
}

input StaffInput {
  firstname: String!
  lastname: String!
  email: String!
  password: String!
}

input StaffUpdateInput {
  firstname: String
  lastname: String
  email: String
  password: String
}

input LoginInput {
  email: String!
  password: String!
}

input SignUpInput {
  firstname: String!
  lastname: String!
  email: String!
  password: String!
  illness: String!
}

input UpdateInput {
  firstname: String
  lastname: String
  email: String
  password: String
  illness: String
}

input AppointmentInput {
  date: String!
  hours: Float!
}

input UpdateAppointmentStatus {
  status: String!
}

input RequestInput {
  wantedDate: String!
  hours: String!
  text: String!
}

input UpdateLeaveStatus {
  status: String!
}

input SalaryRateInput {
  year: Float!
  income: Float!
}

input SalaryRateUpdate {
  year: Float
  income: Float
}

input EvaluateInput {
  month: String!
  year: Float!
}
